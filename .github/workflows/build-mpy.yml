# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build mpy

on:
  push:
    tags:
      - "v*"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mpy-cross
    - name: Test with pytest
      run: |
        mpy-cross urle.py -march=armv7m

    - name: Print the version of mpy-cross
      id: print_ver
      run: |
        echo "::set-output name=version::`mpy-cross --version | awk 'BEGIN { FS="[ ]" } ; { print $2 }'`"

    - name: Get the datetime
      id: get_datetime
      uses: ccccmagicboy/get_datetime@master
      with:
        tz1: 'Europe'
        tz2: 'Dublin'

    - name: Zip the artifact
      run: |
        zip urle_${{ steps.print_ver.outputs.version }}_${{ steps.get_datetime.outputs.datetime_str }}.zip urle.mpy

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: urle_${{ steps.print_ver.outputs.version }}_${{ steps.get_datetime.outputs.datetime_str }}.zip
        asset_name: urle_${{ steps.print_ver.outputs.version }}_${{ steps.get_datetime.outputs.datetime_str }}.zip
        asset_content_type: application/zip
